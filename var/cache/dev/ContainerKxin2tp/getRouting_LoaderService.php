<?php

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;

// This file has been auto-generated by the Symfony Dependency Injection Component for internal use.
// Returns the public 'routing.loader' shared service.

$a = ${($_ = isset($this->services['file_locator']) ? $this->services['file_locator'] : $this->services['file_locator'] = new \Symfony\Component\HttpKernel\Config\FileLocator(${($_ = isset($this->services['kernel']) ? $this->services['kernel'] : $this->get('kernel', 1)) && false ?: '_'}, ($this->targetDirs[3].'\\app/Resources'), array(0 => ($this->targetDirs[3].'\\app')))) && false ?: '_'};

$b = new \Symfony\Bundle\FrameworkBundle\Routing\AnnotatedRouteControllerLoader(${($_ = isset($this->services['annotation_reader']) ? $this->services['annotation_reader'] : $this->getAnnotationReaderService()) && false ?: '_'});

$c = new \Symfony\Component\Config\Loader\LoaderResolver();
$c->addLoader(new \Symfony\Component\Routing\Loader\XmlFileLoader($a));
$c->addLoader(new \Symfony\Component\Routing\Loader\YamlFileLoader($a));
$c->addLoader(new \Symfony\Component\Routing\Loader\PhpFileLoader($a));
$c->addLoader(new \Symfony\Component\Routing\Loader\GlobFileLoader($a));
$c->addLoader(new \Symfony\Component\Routing\Loader\DirectoryLoader($a));
$c->addLoader(new \Symfony\Component\Routing\Loader\DependencyInjection\ServiceRouterLoader($this));
$c->addLoader(${($_ = isset($this->services['sensio_framework_extra.routing.loader.annot_class']) ? $this->services['sensio_framework_extra.routing.loader.annot_class'] : $this->load('getSensioFrameworkExtra_Routing_Loader_AnnotClassService.php')) && false ?: '_'});
$c->addLoader(${($_ = isset($this->services['sensio_framework_extra.routing.loader.annot_dir']) ? $this->services['sensio_framework_extra.routing.loader.annot_dir'] : $this->load('getSensioFrameworkExtra_Routing_Loader_AnnotDirService.php')) && false ?: '_'});
$c->addLoader(${($_ = isset($this->services['sensio_framework_extra.routing.loader.annot_file']) ? $this->services['sensio_framework_extra.routing.loader.annot_file'] : $this->load('getSensioFrameworkExtra_Routing_Loader_AnnotFileService.php')) && false ?: '_'});
$c->addLoader($b);
$c->addLoader(new \Symfony\Component\Routing\Loader\AnnotationDirectoryLoader($a, $b));
$c->addLoader(new \Symfony\Component\Routing\Loader\AnnotationFileLoader($a, $b));

return $this->services['routing.loader'] = new \Symfony\Bundle\FrameworkBundle\Routing\DelegatingLoader(${($_ = isset($this->services['controller_name_converter']) ? $this->services['controller_name_converter'] : $this->services['controller_name_converter'] = new \Symfony\Bundle\FrameworkBundle\Controller\ControllerNameParser(${($_ = isset($this->services['kernel']) ? $this->services['kernel'] : $this->get('kernel', 1)) && false ?: '_'})) && false ?: '_'}, $c);
